{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\nexport const gettingCats = (id, page) => async dispatch => {\n  dispatch(catsActions.setStatus('pending'));\n\n  const getCats = async () => {\n    const response = await fetch(`${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`);\n    const catsList = await response.json();\n    return catsList;\n  };\n\n  try {\n    const cats = await getCats();\n\n    if (page === 1) {\n      dispatch(catsActions.gettingCatsList(cats));\n    } else {\n      dispatch(catsActions.gettingMoreCats(cats));\n    }\n\n    dispatch(catsActions.setStatus('success'));\n  } catch (error) {\n    dispatch(catsActions.setStatus('error'));\n  }\n};\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending'\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      state.catsList = [...action.payload];\n    },\n\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList, ...action.payload];\n    },\n\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    }\n\n  }\n});\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/reducers/catsSlice.js"],"names":["createSlice","API_LINK","gettingCats","id","page","dispatch","catsActions","setStatus","getCats","response","fetch","catsList","json","cats","gettingCatsList","gettingMoreCats","error","catsSlice","name","initialState","catsMoreList","catsStatus","reducers","state","action","payload","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAACC,WAAW,CAACC,SAAZ,CAAsB,SAAtB,CAAD,CAAR;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAET,QAAS,gCAA+BG,IAAK,iBAAgBD,EAAG,EADzC,CAA5B;AAGA,UAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA,WAAOD,QAAP;AACD,GAPD;;AASA,MAAI;AACF,UAAME,IAAI,GAAG,MAAML,OAAO,EAA1B;;AACA,QAAIJ,IAAI,KAAK,CAAb,EAAgB;AACdC,MAAAA,QAAQ,CAACC,WAAW,CAACQ,eAAZ,CAA4BD,IAA5B,CAAD,CAAR;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACC,WAAW,CAACS,eAAZ,CAA4BF,IAA5B,CAAD,CAAR;AACD;;AACDR,IAAAA,QAAQ,CAACC,WAAW,CAACC,SAAZ,CAAsB,SAAtB,CAAD,CAAR;AACD,GARD,CAQE,OAAOS,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAACC,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAD,CAAR;AACD;AACF,CAtBM;AAyBP,MAAMU,SAAS,GAAGjB,WAAW,CAAC;AAC5BkB,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZR,IAAAA,QAAQ,EAAE,EADE;AAEZS,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,eAAe,CAACS,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACZ,QAAN,GAAiB,CAAC,GAAGa,MAAM,CAACC,OAAX,CAAjB;AACD,KAHO;;AAIRV,IAAAA,eAAe,CAACQ,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACZ,QAAN,GAAiB,CAAC,GAAGY,KAAK,CAACZ,QAAV,EAAoB,GAAGa,MAAM,CAACC,OAA9B,CAAjB;AACD,KANO;;AAORlB,IAAAA,SAAS,CAACgB,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACC,OAA1B;AACD;;AATO;AAPkB,CAAD,CAA7B;AAoBA,OAAO,MAAMnB,WAAW,GAAGW,SAAS,CAACS,OAA9B;AACP,eAAeT,SAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\n\n\nexport const gettingCats = (id, page) => async (dispatch) => {\n  dispatch(catsActions.setStatus('pending'));\n  const getCats = async () => {\n    const response = await fetch(\n      `${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`,\n    );\n    const catsList = await response.json();\n\n    return catsList;\n  };\n\n  try {\n    const cats = await getCats();\n    if (page === 1) {\n      dispatch(catsActions.gettingCatsList(cats));\n    } else {\n      dispatch(catsActions.gettingMoreCats(cats));\n    }\n    dispatch(catsActions.setStatus('success'));\n  } catch (error) {\n    dispatch(catsActions.setStatus('error'));\n  }\n};\n\n\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending',\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      state.catsList = [...action.payload];\n    },\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList, ...action.payload];\n    },\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    },\n  },\n});\n\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;\n"]},"metadata":{},"sourceType":"module"}