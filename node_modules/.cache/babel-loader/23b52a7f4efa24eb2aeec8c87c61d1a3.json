{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'; // import { API_LINK } from '../../helpers/constants';\n\nexport const gettingCats = createAsyncThunk('cats/gettingCats ', async (name, thunkAPI) => {\n  try {\n    const resp = await axios(`${API_LINK}/categories`);\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue('something went wrong');\n  }\n}); // export const gettingCats = (id, page) => async (dispatch) => {\n//   const getCats = async () => {\n//     const response = await fetch(\n//       `${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`,\n//     );\n//     const catsList = await response.json();\n//     return catsList;\n//   };\n//   try {\n//     const cats = await getCats();\n//     if (page === 1) {\n//       dispatch(catsActions.gettingCatsList(cats));\n//     } else {\n//       dispatch(catsActions.gettingMoreCats(cats));\n//     }\n//   } catch (error) {\n//     dispatch(catsActions.setStatus('error'));\n//   }\n// };\n\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending'\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      state.catsList = [...action.payload];\n    },\n\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList, ...action.payload];\n    },\n\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    }\n\n  }\n});\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/reducers/catsSlice.js"],"names":["createAsyncThunk","createSlice","gettingCats","name","thunkAPI","resp","axios","API_LINK","data","error","rejectWithValue","catsSlice","initialState","catsList","catsMoreList","catsStatus","reducers","gettingCatsList","state","action","payload","gettingMoreCats","setStatus","catsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C,C,CACA;;AAEA,OAAO,MAAOC,WAAW,GAAGF,gBAAgB,CAC1C,mBAD0C,EAE1C,OAAOG,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEC,QAAS,aAAb,CAAxB;AAEA,WAAOF,IAAI,CAACG,IAAZ;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,WAAOL,QAAQ,CAACM,eAAT,CAAyB,sBAAzB,CAAP;AACD;AACF,CAVyC,CAArC,C,CAYP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGV,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BS,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAC,GAAGM,MAAM,CAACC,OAAX,CAAjB;AACD,KAHO;;AAIRC,IAAAA,eAAe,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoB,GAAGM,MAAM,CAACC,OAA9B,CAAjB;AACD,KANO;;AAORE,IAAAA,SAAS,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACC,OAA1B;AACD;;AATO;AAPkB,CAAD,CAA7B;AAoBA,OAAO,MAAMG,WAAW,GAAGZ,SAAS,CAACa,OAA9B;AACP,eAAeb,SAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n// import { API_LINK } from '../../helpers/constants';\n\nexport const  gettingCats = createAsyncThunk(\n  'cats/gettingCats ',\n  async (name, thunkAPI) => {\n    try {\n      const resp = await axios(`${API_LINK}/categories`);\n\n      return resp.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue('something went wrong');\n    }\n  }\n);\n// export const gettingCats = (id, page) => async (dispatch) => {\n//   const getCats = async () => {\n//     const response = await fetch(\n//       `${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`,\n//     );\n//     const catsList = await response.json();\n\n//     return catsList;\n//   };\n\n//   try {\n//     const cats = await getCats();\n//     if (page === 1) {\n//       dispatch(catsActions.gettingCatsList(cats));\n//     } else {\n//       dispatch(catsActions.gettingMoreCats(cats));\n//     }\n//   } catch (error) {\n//     dispatch(catsActions.setStatus('error'));\n//   }\n// };\n\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending',\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      state.catsList = [...action.payload];\n    },\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList, ...action.payload];\n    },\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    },\n  },\n});\n\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;\n"]},"metadata":{},"sourceType":"module"}