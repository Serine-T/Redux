{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\nimport axios from 'axios';\nexport const gettingCategories = createAsyncThunk('categories/gettingCategories', async (name, thunkAPI) => {\n  try {\n    const resp = await axios(`${API_LINK}/categories`);\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue('something went wrong');\n    console.log(error);\n  }\n});\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: ''\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [gettingCategories.pending]: state => state.categoriesStatus = 'pending',\n    [gettingCategories.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.categoriesStatus = 'success';\n      state.categoriesList = payload;\n    },\n    [gettingCategories.rejected]: state => state.categoriesStatus = 'error'\n  }\n});\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/reducers/categoriesSlice.js"],"names":["createAsyncThunk","createSlice","API_LINK","axios","gettingCategories","name","thunkAPI","resp","data","error","rejectWithValue","console","log","categoriesSlice","initialState","categoriesList","categoriesStatus","reducers","state","action","payload","setStatus","extraReducers","pending","fulfilled","rejected","categoriesActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,gBAAgB,CAC/C,8BAD+C,EAE/C,OAAOK,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,KAAK,CAAE,GAAED,QAAS,aAAb,CAAxB;AAEA,WAAOK,IAAI,CAACC,IAAZ;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AAEd,WAAOH,QAAQ,CAACI,eAAT,CAAyB,sBAAzB,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,CAZ8C,CAA1C;AAeP,MAAMI,eAAe,GAAGZ,WAAW,CAAC;AAClCI,EAAAA,IAAI,EAAE,YAD4B;AAElCS,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE,EADJ;AAEZC,IAAAA,gBAAgB,EAAE;AAFN,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRb,IAAAA,iBAAiB,CAACc,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACH,cAAN,GAAuB,CAAC,GAAGI,MAAM,CAACC,OAAX,CAAvB;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACF,gBAAN,GAAyBG,MAAM,CAACC,OAAhC;AACD;;AANO,GANwB;AAclCE,EAAAA,aAAa,EAAE;AACb,KAAClB,iBAAiB,CAACmB,OAAnB,GAA8BL,KAAD,IAAWA,KAAK,CAACF,gBAAN,GAAyB,SADpD;AAEb,KAACZ,iBAAiB,CAACoB,SAAnB,GAA+B,CAACN,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AACrDF,MAAAA,KAAK,CAACF,gBAAN,GAAyB,SAAzB;AACAE,MAAAA,KAAK,CAACH,cAAN,GAAuBK,OAAvB;AACD,KALY;AAMb,KAAChB,iBAAiB,CAACqB,QAAnB,GAA+BP,KAAD,IAAWA,KAAK,CAACF,gBAAN,GAAyB;AANrD;AAdmB,CAAD,CAAnC;AAwBA,OAAO,MAAMU,iBAAiB,GAAGb,eAAe,CAACc,OAA1C;AACP,eAAed,eAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\nimport axios from 'axios';\n\nexport const gettingCategories = createAsyncThunk(\n  'categories/gettingCategories',\n  async (name, thunkAPI) => {\n    try {\n      const resp = await axios(`${API_LINK}/categories`);\n\n      return resp.data;\n    } catch (error) {\n\n      return thunkAPI.rejectWithValue('something went wrong');\n      console.log(error);\n    }\n  }\n);\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: '',\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    },\n  },\n  extraReducers: {\n    [gettingCategories.pending]: (state) => state.categoriesStatus = 'pending',\n    [gettingCategories.fulfilled]: (state, { payload }) => {\n      state.categoriesStatus = 'success';\n      state.categoriesList = payload;\n    },\n    [gettingCategories.rejected]: (state) => state.categoriesStatus = 'error',\n  }\n});\n\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;\n"]},"metadata":{},"sourceType":"module"}