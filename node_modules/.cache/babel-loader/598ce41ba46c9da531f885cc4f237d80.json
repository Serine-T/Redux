{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst coursesSlice = createSlice({\n  name: 'course',\n  initialState: {\n    coursesList: [],\n    flitersList: ['all', 'popular', 'favorite', 'new'],\n    filterBy: 'all'\n  },\n  reducers: {\n    setFilterBy(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.filterBy = payload;\n    },\n\n    setCoursesList(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n\n      if (payload.filterBy === 'popular') {\n        var _ref3;\n\n        const popularCoursesList = (_ref3 = [...payload.list]) === null || _ref3 === void 0 ? void 0 : _ref3.filter(course => course.views);\n        state.coursesList = popularCoursesList;\n      } else if (payload.filterBy === 'favorite') {\n        var _payload$list;\n\n        const favoriteCoursesList = payload === null || payload === void 0 ? void 0 : (_payload$list = payload.list) === null || _payload$list === void 0 ? void 0 : _payload$list.filter(course => course.isFavorite);\n        state.coursesList = favoriteCoursesList;\n      } else if (payload.filterBy === 'new') {\n        var _payload$list2;\n\n        const newCoursesList = (_payload$list2 = payload.list) === null || _payload$list2 === void 0 ? void 0 : _payload$list2.filter(course => course.isNew);\n        state.coursesList = newCoursesList;\n      } else {\n        state.coursesList = payload.list;\n      }\n    }\n\n  }\n});\nexport const {\n  setFilterBy,\n  setCoursesList\n} = coursesSlice.actions;\nexport default coursesSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/ResponsiveApp/src/store/slices/coursesSlice..js"],"names":["createSlice","coursesSlice","name","initialState","coursesList","flitersList","filterBy","reducers","setFilterBy","state","payload","setCoursesList","popularCoursesList","list","filter","course","views","favoriteCoursesList","isFavorite","newCoursesList","isNew","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,QADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,EADD;AAEZC,IAAAA,WAAW,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAnB,EAA+B,KAA/B,CAFD;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAFiB;AAO/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC9BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,OAAjB;AACD,KAHO;;AAIRC,IAAAA,cAAc,CAACF,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;;AACjC,UAAIA,OAAO,CAACJ,QAAR,KAAqB,SAAzB,EAAoC;AAAA;;AAClC,cAAMM,kBAAkB,YAAG,CAAC,GAAGF,OAAO,CAACG,IAAZ,CAAH,0CAAG,MAAmBC,MAAnB,CAA2BC,MAAD,IAAYA,MAAM,CAACC,KAA7C,CAA3B;AACAP,QAAAA,KAAK,CAACL,WAAN,GAAoBQ,kBAApB;AACD,OAHD,MAGO,IAAIF,OAAO,CAACJ,QAAR,KAAqB,UAAzB,EAAqC;AAAA;;AAC1C,cAAMW,mBAAmB,GAAGP,OAAH,aAAGA,OAAH,wCAAGA,OAAO,CAAEG,IAAZ,kDAAG,cAAeC,MAAf,CAAsBC,MAAM,IAAIA,MAAM,CAACG,UAAvC,CAA5B;AACAT,QAAAA,KAAK,CAACL,WAAN,GAAoBa,mBAApB;AACD,OAHM,MAGA,IAAIP,OAAO,CAACJ,QAAR,KAAqB,KAAzB,EAAgC;AAAA;;AACrC,cAAMa,cAAc,qBAAGT,OAAO,CAACG,IAAX,mDAAG,eAAcC,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACK,KAAtC,CAAvB;AACAX,QAAAA,KAAK,CAACL,WAAN,GAAoBe,cAApB;AACD,OAHM,MAGA;AACLV,QAAAA,KAAK,CAACL,WAAN,GAAoBM,OAAO,CAACG,IAA5B;AACD;AACF;;AAjBO;AAPqB,CAAD,CAAhC;AA4BA,OAAO,MAAM;AAAEL,EAAAA,WAAF;AAAeG,EAAAA;AAAf,IAAkCV,YAAY,CAACoB,OAArD;AACP,eAAepB,YAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst coursesSlice = createSlice({\n  name: 'course',\n  initialState: {\n    coursesList: [],\n    flitersList: ['all', 'popular', 'favorite', 'new'],\n    filterBy: 'all'\n  },\n  reducers: {\n    setFilterBy(state, { payload }) {\n      state.filterBy = payload;\n    },\n    setCoursesList(state, { payload }) {\n      if (payload.filterBy === 'popular') {\n        const popularCoursesList = [...payload.list]?.filter((course) => course.views);\n        state.coursesList = popularCoursesList;\n      } else if (payload.filterBy === 'favorite') {\n        const favoriteCoursesList = payload?.list?.filter(course => course.isFavorite);\n        state.coursesList = favoriteCoursesList;\n      } else if (payload.filterBy === 'new') {\n        const newCoursesList = payload.list?.filter(course => course.isNew);\n        state.coursesList = newCoursesList;\n      } else {\n        state.coursesList = payload.list;\n      }\n    }\n  }\n});\n\nexport const { setFilterBy, setCoursesList } = coursesSlice.actions;\nexport default coursesSlice;\n"]},"metadata":{},"sourceType":"module"}