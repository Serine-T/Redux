{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const gettingCategories = () => async dispatch => {\n  // dispatch(categoriesActions.setStatus('pending'));\n  const getCategories = async () => {\n    const response = await fetch(`${API_LIN}/categories`);\n    const categories = await response.json();\n    return categories;\n  };\n\n  try {\n    const categoriesList = await getCategories();\n    dispatch(categoriesActions.gettingCategories(categoriesList));\n    dispatch(categoriesActions.setStatus('success'));\n  } catch (error) {\n    dispatch(categoriesActions.setStatus('error'));\n  }\n};\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: 'pending'\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    }\n\n  }\n});\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/reducers/categoriesSlice.js"],"names":["createSlice","gettingCategories","dispatch","getCategories","response","fetch","API_LIN","categories","json","categoriesList","categoriesActions","setStatus","error","categoriesSlice","name","initialState","categoriesStatus","reducers","state","action","payload","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACzD;AACA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAQ,aAAZ,CAA5B;AACA,UAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAzB;AAEA,WAAOD,UAAP;AACD,GALD;;AAOA,MAAI;AACF,UAAME,cAAc,GAAG,MAAMN,aAAa,EAA1C;AACAD,IAAAA,QAAQ,CAACQ,iBAAiB,CAACT,iBAAlB,CAAoCQ,cAApC,CAAD,CAAR;AACAP,IAAAA,QAAQ,CAACQ,iBAAiB,CAACC,SAAlB,CAA4B,SAA5B,CAAD,CAAR;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAACQ,iBAAiB,CAACC,SAAlB,CAA4B,OAA5B,CAAD,CAAR;AACD;AACF,CAhBM;AAkBP,MAAME,eAAe,GAAGb,WAAW,CAAC;AAClCc,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZN,IAAAA,cAAc,EAAE,EADJ;AAEZO,IAAAA,gBAAgB,EAAE;AAFN,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,iBAAiB,CAACiB,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACT,cAAN,GAAuB,CAAC,GAAGU,MAAM,CAACC,OAAX,CAAvB;AACD,KAHO;;AAIRT,IAAAA,SAAS,CAACO,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACF,gBAAN,GAAyBG,MAAM,CAACC,OAAhC;AACD;;AANO;AANwB,CAAD,CAAnC;AAgBA,OAAO,MAAMV,iBAAiB,GAAGG,eAAe,CAACQ,OAA1C;AACP,eAAeR,eAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const gettingCategories = () => async (dispatch) => {\n  // dispatch(categoriesActions.setStatus('pending'));\n  const getCategories = async () => {\n    const response = await fetch(`${API_LIN}/categories`);\n    const categories = await response.json();\n    \n    return categories;\n  };\n\n  try {\n    const categoriesList = await getCategories();\n    dispatch(categoriesActions.gettingCategories(categoriesList));\n    dispatch(categoriesActions.setStatus('success'));\n  } catch (error) {\n    dispatch(categoriesActions.setStatus('error'));\n  }\n};\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: 'pending',\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    },\n  },\n});\n\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;\n"]},"metadata":{},"sourceType":"module"}