{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst coursesSlice = createSlice({\n  name: 'course',\n  initialState: {\n    coursesList: [],\n    flitersList: ['popular', 'favorite', 'new'],\n    filterBy: 'popular'\n  },\n  reducers: {\n    setFilterBy(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.filterBy = payload;\n    },\n\n    setCoursesList(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n\n      if (payload.filterBy === 'popular') {\n        var _payload$list;\n\n        const popularCoursesList = payload === null || payload === void 0 ? void 0 : (_payload$list = payload.list) === null || _payload$list === void 0 ? void 0 : _payload$list.sort((item1, item2) => {\n          console.log(item2.views, item1.views);\n          return item2.views - item1.views;\n        });\n        state.coursesList = popularCoursesList;\n      } else if (payload.filterBy === 'favorite') {\n        var _payload$list2;\n\n        const favoriteCoursesList = payload === null || payload === void 0 ? void 0 : (_payload$list2 = payload.list) === null || _payload$list2 === void 0 ? void 0 : _payload$list2.filter(item => item.isFavorite);\n        state.coursesList = favoriteCoursesList;\n      } else {\n        var _payload$list3;\n\n        const newCoursesList = payload === null || payload === void 0 ? void 0 : (_payload$list3 = payload.list) === null || _payload$list3 === void 0 ? void 0 : _payload$list3.filter(item => item.isNew);\n        state.coursesList = newCoursesList;\n      }\n    }\n\n  }\n});\nexport const {\n  setFilterBy,\n  setCoursesList\n} = coursesSlice.actions;\nexport default coursesSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/ResponsiveApp/src/store/slices/coursesSlice..js"],"names":["createSlice","coursesSlice","name","initialState","coursesList","flitersList","filterBy","reducers","setFilterBy","state","payload","setCoursesList","popularCoursesList","list","sort","item1","item2","console","log","views","favoriteCoursesList","filter","item","isFavorite","newCoursesList","isNew","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,QADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,EADD;AAEZC,IAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,KAAxB,CAFD;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAFiB;AAO/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC9BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,OAAjB;AACD,KAHO;;AAIRC,IAAAA,cAAc,CAACF,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;;AACjC,UAAIA,OAAO,CAACJ,QAAR,KAAqB,SAAzB,EAAoC;AAAA;;AAClC,cAAMM,kBAAkB,GAAGF,OAAH,aAAGA,OAAH,wCAAGA,OAAO,CAAEG,IAAZ,kDAAG,cAAeC,IAAf,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/DC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB,EAAyBJ,KAAK,CAACI,KAA/B;AACA,iBAAOH,KAAK,CAACG,KAAN,GAAcJ,KAAK,CAACI,KAA3B;AACD,SAH0B,CAA3B;AAIAV,QAAAA,KAAK,CAACL,WAAN,GAAoBQ,kBAApB;AACD,OAND,MAMO,IAAIF,OAAO,CAACJ,QAAR,KAAqB,UAAzB,EAAqC;AAAA;;AAC1C,cAAMc,mBAAmB,GAAGV,OAAH,aAAGA,OAAH,yCAAGA,OAAO,CAAEG,IAAZ,mDAAG,eAAeQ,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACC,UAAnC,CAA5B;AACAd,QAAAA,KAAK,CAACL,WAAN,GAAoBgB,mBAApB;AACD,OAHM,MAGA;AAAA;;AACL,cAAMI,cAAc,GAAGd,OAAH,aAAGA,OAAH,yCAAGA,OAAO,CAAEG,IAAZ,mDAAG,eAAeQ,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACG,KAAnC,CAAvB;AACAhB,QAAAA,KAAK,CAACL,WAAN,GAAoBoB,cAApB;AACD;AACF;;AAlBO;AAPqB,CAAD,CAAhC;AA6BA,OAAO,MAAM;AAAEhB,EAAAA,WAAF;AAAeG,EAAAA;AAAf,IAAkCV,YAAY,CAACyB,OAArD;AACP,eAAezB,YAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst coursesSlice = createSlice({\n  name: 'course',\n  initialState: {\n    coursesList: [],\n    flitersList: ['popular', 'favorite', 'new'],\n    filterBy: 'popular'\n  },\n  reducers: {\n    setFilterBy(state, { payload }) {\n      state.filterBy = payload;\n    },\n    setCoursesList(state, { payload }) {\n      if (payload.filterBy === 'popular') {\n        const popularCoursesList = payload?.list?.sort((item1, item2) => {\n          console.log(item2.views, item1.views);\n          return item2.views - item1.views\n        });\n        state.coursesList = popularCoursesList;\n      } else if (payload.filterBy === 'favorite') {\n        const favoriteCoursesList = payload?.list?.filter(item => item.isFavorite);\n        state.coursesList = favoriteCoursesList;\n      } else {\n        const newCoursesList = payload?.list?.filter(item => item.isNew);\n        state.coursesList = newCoursesList;\n      }\n    }\n  }\n});\n\nexport const { setFilterBy, setCoursesList } = coursesSlice.actions;\nexport default coursesSlice;\n"]},"metadata":{},"sourceType":"module"}