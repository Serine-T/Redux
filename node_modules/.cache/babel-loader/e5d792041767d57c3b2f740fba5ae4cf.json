{"ast":null,"code":"import { API_LINK } from '../../helpers/constants';\nimport { catsActions } from '../reducers/catsSlice';\nexport const gettingCats = (id, page) => async dispatch => {\n  dispatch(catsActions.setStatus('pending'));\n\n  const getCats = async () => {\n    const response = await fetch(`${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`);\n    const catsList = await response.json();\n    return catsList;\n  };\n\n  try {\n    const cats = await getCats();\n\n    if (page === 1) {\n      dispatch(catsActions.gettingCatsList(cats));\n    } else {\n      dispatch(catsActions.gettingMoreCats(cats));\n    }\n\n    dispatch(catsActions.setStatus('success'));\n  } catch (error) {\n    dispatch(catsActions.setStatus('error'));\n  }\n};","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/actions/catsActions.js"],"names":["API_LINK","catsActions","gettingCats","id","page","dispatch","setStatus","getCats","response","fetch","catsList","json","cats","gettingCatsList","gettingMoreCats","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,SAAtB,CAAD,CAAR;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAET,QAAS,gCAA+BI,IAAK,iBAAgBD,EAAG,EADzC,CAA5B;AAGA,UAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA,WAAOD,QAAP;AACD,GAPD;;AASA,MAAI;AACF,UAAME,IAAI,GAAG,MAAML,OAAO,EAA1B;;AACA,QAAIH,IAAI,KAAK,CAAb,EAAgB;AACdC,MAAAA,QAAQ,CAACJ,WAAW,CAACY,eAAZ,CAA4BD,IAA5B,CAAD,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAACJ,WAAW,CAACa,eAAZ,CAA4BF,IAA5B,CAAD,CAAR;AACD;;AACDP,IAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,SAAtB,CAAD,CAAR;AACD,GARD,CAQE,OAAOS,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,OAAtB,CAAD,CAAR;AACH;AACF,CAtBM","sourcesContent":["import { API_LINK } from '../../helpers/constants';\nimport { catsActions } from '../reducers/catsSlice';\n\nexport const gettingCats = (id, page) => async (dispatch) => {\n  dispatch(catsActions.setStatus('pending'));\n  const getCats = async () => {\n    const response = await fetch(\n      `${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`,\n    );\n    const catsList = await response.json();\n    \n    return catsList;\n  };\n\n  try {\n    const cats = await getCats();\n    if (page === 1) {\n      dispatch(catsActions.gettingCatsList(cats));\n    } else {\n      dispatch(catsActions.gettingMoreCats(cats));\n    }\n    dispatch(catsActions.setStatus('success'));\n  } catch (error) {\n      dispatch(catsActions.setStatus('error'));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}