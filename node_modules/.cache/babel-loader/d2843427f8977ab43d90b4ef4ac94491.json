{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\nimport axios from 'axios';\nexport const gettingCategoriesX = createAsyncThunk('categories/gettingCategories', async (name, thunkAPI) => {\n  try {\n    const resp = await axios(`${API_LINK}/categories`);\n    console;\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue('something went wrong');\n  }\n});\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: 'pending'\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [gettingCategoriesX.pending]: state => state.categoriesStatus = 'pending',\n    [gettingCategoriesX.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.categoriesStatus = 'success';\n      state.categoriesList = payload;\n    },\n    [gettingCategoriesX.rejected]: state => state.categoriesStatus = 'error'\n  }\n});\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/reducers/categoriesSlice.js"],"names":["createAsyncThunk","createSlice","API_LINK","axios","gettingCategoriesX","name","thunkAPI","resp","console","data","error","rejectWithValue","categoriesSlice","initialState","categoriesList","categoriesStatus","reducers","gettingCategories","state","action","payload","setStatus","extraReducers","pending","fulfilled","rejected","categoriesActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAChD,8BADgD,EAEhD,OAAOK,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,KAAK,CAAE,GAAED,QAAS,aAAb,CAAxB;AACAM,IAAAA,OAAO;AACP,WAAOD,IAAI,CAACE,IAAZ;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,WAAOJ,QAAQ,CAACK,eAAT,CAAyB,sBAAzB,CAAP;AACD;AACF,CAV+C,CAA3C;AAaP,MAAMC,eAAe,GAAGX,WAAW,CAAC;AAClCI,EAAAA,IAAI,EAAE,YAD4B;AAElCQ,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE,EADJ;AAEZC,IAAAA,gBAAgB,EAAE;AAFN,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACJ,cAAN,GAAuB,CAAC,GAAGK,MAAM,CAACC,OAAX,CAAvB;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACH,gBAAN,GAAyBI,MAAM,CAACC,OAAhC;AACD;;AANO,GANwB;AAclCE,EAAAA,aAAa,EAAE;AACb,KAAClB,kBAAkB,CAACmB,OAApB,GAA+BL,KAAD,IAAWA,KAAK,CAACH,gBAAN,GAAyB,SADrD;AAEb,KAACX,kBAAkB,CAACoB,SAApB,GAAgC,CAACN,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AACtDF,MAAAA,KAAK,CAACH,gBAAN,GAAyB,SAAzB;AACAG,MAAAA,KAAK,CAACJ,cAAN,GAAuBM,OAAvB;AACD,KALY;AAMb,KAAChB,kBAAkB,CAACqB,QAApB,GAAgCP,KAAD,IAAWA,KAAK,CAACH,gBAAN,GAAyB;AANtD;AAdmB,CAAD,CAAnC;AAwBA,OAAO,MAAMW,iBAAiB,GAAGd,eAAe,CAACe,OAA1C;AACP,eAAef,eAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { API_LINK } from '../../helpers/constants';\nimport axios from 'axios';\n\nexport const gettingCategoriesX = createAsyncThunk(\n  'categories/gettingCategories',\n  async (name, thunkAPI) => {\n    try {\n      const resp = await axios(`${API_LINK}/categories`);\n      console\n      return resp.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue('something went wrong');\n    }\n  }\n);\n\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    categoriesList: [],\n    categoriesStatus: 'pending',\n  },\n  reducers: {\n    gettingCategories(state, action) {\n      state.categoriesList = [...action.payload];\n    },\n    setStatus(state, action) {\n      state.categoriesStatus = action.payload;\n    },\n  },\n  extraReducers: {\n    [gettingCategoriesX.pending]: (state) => state.categoriesStatus = 'pending',\n    [gettingCategoriesX.fulfilled]: (state, { payload }) => {\n      state.categoriesStatus = 'success';\n      state.categoriesList = payload;\n    },\n    [gettingCategoriesX.rejected]: (state) => state.categoriesStatus = 'error',\n  }\n});\n\nexport const categoriesActions = categoriesSlice.actions;\nexport default categoriesSlice;\n"]},"metadata":{},"sourceType":"module"}