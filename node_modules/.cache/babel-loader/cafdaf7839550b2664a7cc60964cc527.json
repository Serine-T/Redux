{"ast":null,"code":"import { API_LINK } from \"../../helpers/constants\";\nimport { catsActions } from \"../reducers/catsSlice\";\nexport const gettingCats = (id, page) => {\n  return async dispatch => {\n    dispatch(catsActions.setStatus('pending'));\n\n    const getCats = async () => {\n      const response = await fetch(`${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`);\n      const catsList = await response.json();\n      return catsList;\n    };\n\n    try {\n      const cats = await getCats();\n\n      if (page === 1) {\n        dispatch(catsActions.gettingCatsList(cats));\n      } else {}\n\n      dispatch(catsActions.setStatus('success'));\n    } catch (error) {\n      dispatch(catsActions.setStatus('error'));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/actions/catsActions.js"],"names":["API_LINK","catsActions","gettingCats","id","page","dispatch","setStatus","getCats","response","fetch","catsList","json","cats","gettingCatsList","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACvC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,SAAtB,CAAD,CAAR;;AACA,UAAMC,OAAO,GAAG,YAAW;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAET,QAAS,gCAA+BI,IAAK,iBAAgBD,EAAG,EADzC,CAA5B;AAGA,YAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA,aAAOD,QAAP;AACD,KAPD;;AASA,QAAI;AACF,YAAME,IAAI,GAAG,MAAML,OAAO,EAA1B;;AACA,UAAGH,IAAI,KAAK,CAAZ,EAAe;AACbC,QAAAA,QAAQ,CAACJ,WAAW,CAACY,eAAZ,CAA4BD,IAA5B,CAAD,CAAR;AACD,OAFD,MAEO,CAEN;;AACDP,MAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,SAAtB,CAAD,CAAR;AACD,KARD,CAQE,OAAMQ,KAAN,EAAa;AACbT,MAAAA,QAAQ,CAACJ,WAAW,CAACK,SAAZ,CAAsB,OAAtB,CAAD,CAAR;AACD;AACF,GAtBD;AAuBD,CAxBM","sourcesContent":["import { API_LINK } from \"../../helpers/constants\";\nimport { catsActions } from \"../reducers/catsSlice\";\n\nexport const gettingCats = (id, page) => {\n  return async (dispatch) => {\n    dispatch(catsActions.setStatus('pending'));\n    const getCats = async() => {\n      const response = await fetch(\n        `${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`\n      );\n      const catsList = await response.json();\n\n      return catsList;\n    }\n\n    try {\n      const cats = await getCats();\n      if(page === 1) {\n        dispatch(catsActions.gettingCatsList(cats));\n      } else {\n        \n      }\n      dispatch(catsActions.setStatus('success'));\n    } catch(error) {\n      dispatch(catsActions.setStatus('error'));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}