{"ast":null,"code":"import { createStore } from 'redux';\n\nconst reducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    categories: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'GET_CATEGORIES') {\n    async function getCategories() {\n      try {\n        let response = await fetch('https://api.thecatapi.com/v1/categories');\n        let categories = await response.json();\n        console.log('cate');\n        console.log(categories);\n        return { ...state,\n          categories: [...categories]\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCategories();\n  }\n\n  console.log;\n  return state;\n};\n\nconst store = createStore(reducers);\nexport default store;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/index.js"],"names":["createStore","reducers","state","categories","action","type","getCategories","response","fetch","json","console","log","error","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;;AAEA,MAAMC,QAAQ,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAA3B;AAACC,IAAAA,UAAU,EAAE;AAAb,GAA2B;AAAA,MAATC,MAAS;;AAC/C,MAAGA,MAAM,CAACC,IAAP,KAAgB,gBAAnB,EAAqC;AACjC,mBAAeC,aAAf,GAA+B;AAC3B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAA1B;AACA,YAAIL,UAAU,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA,eAAO,EACH,GAAGD,KADA;AAEHC,UAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ;AAFT,SAAP;AAID,OATD,CASE,OAAMS,KAAN,EAAa;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACJ;;AACDN,IAAAA,aAAa;AAChB;;AACLI,EAAAA,OAAO,CAACC,GAAR;AACI,SAAOT,KAAP;AACH,CApBD;;AAqBA,MAAMW,KAAK,GAAGb,WAAW,CAACC,QAAD,CAAzB;AAEA,eAAeY,KAAf","sourcesContent":["import {createStore} from 'redux';\n\nconst reducers = (state={categories: []}, action)=>{\n    if(action.type === 'GET_CATEGORIES') {\n        async function getCategories() {\n            try {\n              let response = await fetch('https://api.thecatapi.com/v1/categories');\n              let categories = await response.json();\n              console.log('cate')\n              console.log(categories)\n              return {\n                  ...state,\n                  categories: [...categories] \n                };\n            } catch(error) {\n             console.log(error);\n            }\n        }\n        getCategories()\n    }\nconsole.log\n    return state;\n}\nconst store = createStore(reducers);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}